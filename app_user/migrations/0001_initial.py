# Generated by Django 2.0.7 on 2019-12-29 18:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='', max_length=64, verbose_name='姓名,并非用户名')),
                ('wechat', models.CharField(default='', max_length=64, verbose_name='微信')),
                ('telegram', models.CharField(default='', max_length=64, verbose_name='Tg')),
                ('phone', models.CharField(default='', max_length=64, verbose_name='手机号码')),
                ('role', models.PositiveIntegerField(choices=[(0, '管理员'), (1, '游客')], default=1, verbose_name='用户角色')),
                ('description', models.CharField(default='', max_length=128, verbose_name='签名描述')),
                ('company', models.CharField(default='', max_length=128, verbose_name='公司')),
                ('department', models.CharField(default='', max_length=128, verbose_name='部门')),
                ('position', models.CharField(default='', max_length=128, verbose_name='职位')),
                ('city', models.CharField(default='', max_length=128, verbose_name='城市')),
                ('tag', models.TextField(default='[]', verbose_name='标签')),
                ('avatar', models.TextField(default='', verbose_name='用户头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'app_user_UserProfile',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cloudword', models.TextField(default='', verbose_name='云词图base64')),
                ('cloudword_width', models.CharField(default='260', max_length=64, verbose_name='云词图大小')),
                ('tag', models.TextField(default='[]', verbose_name='标签')),
                ('timeline', models.TextField(default='', verbose_name='时光轴内容')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='userdata_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
    ]
